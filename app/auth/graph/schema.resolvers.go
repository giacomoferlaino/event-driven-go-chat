package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.49

import (
	"chat/app/auth/graph/generated"
	"context"
	"fmt"
)

// Login is the resolver for the login field.
func (r *mutationResolver) Login(ctx context.Context, input generated.UserCredentials) (*generated.User, error) {
	user := &generated.User{
		FirstName: "James",
		LastName:  "Bond",
	}

	return user, nil
}

// Foo is the resolver for the foo field.
func (r *queryResolver) Foo(ctx context.Context) (string, error) {
	panic(fmt.Errorf("not implemented: Foo - foo"))
}

// Mutation returns generated.MutationResolver implementation.
func (r *Resolver) Mutation() generated.MutationResolver { return &mutationResolver{r} }

// Query returns generated.QueryResolver implementation.
func (r *Resolver) Query() generated.QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
